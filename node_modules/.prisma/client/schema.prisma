// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  // typeSafeにするためoutputを設定してはいけない
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Level {
  Info
  Warn
  Error
}

enum Gender {
  male
  female
  middle
}

model Log {
  id      Int    @id @default(autoincrement())
  level   Level
  message String
  meta    Json
}

model User {
  id           String    @id @default(uuid())
  userName     String
  gender       Gender
  country      String
  city         String
  email        String    @unique
  birthYear    String
  activated    Boolean   @default(false)
  invited      Boolean   @default(false)
  invitedUntil DateTime?
  password     String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Grade {
  id        Int      @id @default(autoincrement())
  grade     String
  gradeJp   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  Grammar Grammar[]
}

model Grammar {
  id        Int      @id @default(autoincrement())
  unit      String
  tangen    String
  localId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  Grade           Grade             @relation(fields: [gradeId], references: [id])
  gradeId         Int
  GrammarQuestion GrammarQuestion[]

  @@index([gradeId])
}

model GrammarQuestion {
  id          Int      @id @default(autoincrement())
  title       String
  sentence    String
  q1          String
  q2          String
  q3          String?
  q4          String?
  q5          String?
  q6          String?
  answer      String
  explanation String
  localId     Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  Grammar   Grammar @relation(fields: [grammarId], references: [id])
  grammarId Int

  @@index([grammarId])
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  price       Int
  image       Json
  url         String
  description String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Review Review[]
}

model Review {
  id        Int      @id @default(autoincrement())
  text      String   @db.Text
  // 購入と結びつけた方がいいのでゆくゆくはリレーション
  reviewer  String
  rating    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@index([productId])
}
